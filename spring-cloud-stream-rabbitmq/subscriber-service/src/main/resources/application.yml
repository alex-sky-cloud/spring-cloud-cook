spring:
  rabbitmq:
    host: localhost
    port: 5673
    username: guest
    password: guest
  application:
    name: subscriber-service
    # Следующие свойства доступны только для потребителей Rabbit и должны иметь префикс
    # spring.cloud.stream.rabbit.bindings.<channelName>.consumer
    # <channelName> - это `subscribe-in-0`(см. ниже)
  cloud:
    stream:
      rabbit:
        bindings:
          # название канала, куда нужно помещать сообщения, которые вызывают ошибку
          # данные сообщения будут помещаться в Queues, которая будет иметь формат
          # <name-destination>.<name-group>.dlq. Эта очередь будет автоматически создана,
          # в rabbit, когда приложение начнет инициализироваться и spring начнет создавать
          # конфигурацию, на основе данных представленных в данном application.yml
          subscribe-in-0:
            consumer:
              # Следует ли автоматически объявлять DLQ и привязывать его к binder DLX.
              autoBindDlq: true
      # spring.cloud.stream.bindings это место,
      # где вы фактически привязываете функции к входным и выходным каналам.
      bindings:
        # Это следует соглашению об именовании:
        # input: <functionName> + -in- + <function parameter index>
        # <functionName> - subscribe, так называется функция, имя которой объявлено
        # будет как метод помеченный аннотацией @Bean.
        # Этот метод будет получать сообщения из очереди
        # in - это указывает на входной канал (input), то есть сообщения поступают в Sink,
        # то есть принимаются тем, кто подписан на эти сообщения
        # 0 - индекс канала, который принимает данные. Этот индекс всегда равен 0
        # для типичной одиночной функции ввода/вывода,
        # поэтому оно применимо только для функций
        # с несколькими входными и выходными аргументами
        subscribe-in-0:
          # Это физическое имя брокера, к которому настраивается привязка
          # Topic, откуда будет забираться сообщение
          destination: inputSubscriber
          # Уникальное имя, которому принадлежит binding
          # (применяется только к consumers (subscribers)).
          # Несколько subscribers в одной группе совместно используют subscription (подписку).
          # null или пустое строковое значение указывает на анонимную группу,
          # которая не используется совместно.
          group: inputSubscriberGroup

server:
  port: 8030
