version: "3.8"
services:
  rabbitmq:
    # Данный образ поставляется с установленным и включенным
    # по умолчанию плагином управления, который доступен
    # на стандартном порту управления 15672 с
    # именем пользователя и паролем по умолчанию:
    # имя пользователя: guest
    # пароль: guest
    # management-alpine - то есть образ также содержит дополнительно,
    # плагин управления RabbitMQ, то есть веб-интерфейс для управления
    image: rabbitmq:management-alpine
    container_name: 'rabbitmq'
    ports:
      # на этом порту сервер RabbitMQ будет принимать запросы, то есть через консоль
      - "5673:5672"
      # на этом порту будут приниматься запросы на веб-интерфейс консоли управления
      # rabitmq
      - "15672:15672"
    # Создадим тома, который будут проецировать на хост конфигурацию из контейнера
    # чтобы durability очереди и журналы не терялись при перезапуске контейнера.
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - rabbitmq # задаем название сети, в которой будет работать создаваемый контейнер
networks:
  rabbitmq:
    # Указываем тип драйвера сети, который будет назначен для созданной выше сети
    driver: bridge