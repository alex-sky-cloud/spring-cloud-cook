/*указываются плагины для анализа текущего файла и настройке необходимых конфигураций*/
plugins {
  /*управляет зависимостями, которые нужны для настройки spring-компонентов*/
  id 'org.springframework.boot' version '2.7.4'
  /*Управляет зависимостями актуальных версий для spring компонентов*/
  id 'io.spring.dependency-management' version '1.0.14.RELEASE'
  /*отвечает за компиляцию и других базовых вещей связанных с java-Кодом*/
  id 'java'
}

/*уникальные идентификаторы, для создания артефакта из данного модуля*/
group = 'org.microserives.demo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

/*настройка properties для конфигурационного файла, или лучше сказать
* это аналог properties в Maven,  которая будет использоваться здесь,
* чтобы  в одном месте можно было изменять версию зависимости, чтобы не искать
* ее по всему проекту.  */
ext {
  set('springCloudVersion', "2021.0.4")
}

dependencies {
  implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
  implementation 'org.springframework.cloud:spring-cloud-starter-config'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'

  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

/*управляем версией библиотек, которые нужно будет выкачивать для данного проекта,
* для обеспечения совместимости*/
dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}

tasks.named('test') {
  useJUnitPlatform()
}
